OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T03:53:51.445329-03:00' ],		#prior : OmReference [ 'Pharo.2z5w9erp0y4qfxm3cqeurkna1', '54' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'agregarPreguntaConTopicos:yTitu:yDesc:',			#protocol : #'as yet unclassified',			#sourceCode : 'agregarPreguntaConTopicos: unTopicos yTitu: unTitu yDesc: unDesc\r\tpreguntas add: (Pregunta conTitulo: unTitu conDescripcion: unDesc topicos: unTopicos).  ',			#stamp : 'Anonymous 3/26/2019 15:23',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'agregarPreguntaConTopicos:yTitu:yDesc:',			#protocol : #'as yet unclassified',			#sourceCode : 'agregarPreguntaConTopicos: unTopicos yTitu: unTitu yDesc: unDesc \r\tpreguntas add: (Pregunta conTitulo: unTitu conDescripcion: unDesc topicos: unTopicos yUsuario: self).  ',			#stamp : 'Anonymous 4/3/2019 03:53',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T03:57:54.547329-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'agregarPreguntaConTopicos:yTitu:yDesc:',			#protocol : #'as yet unclassified',			#sourceCode : 'agregarPreguntaConTopicos: unTopicos yTitu: unTitu yDesc: unDesc \r\tpreguntas add: (Pregunta conTitulo: unTitu conDescripcion: unDesc topicos: unTopicos yUsuario: self).  ',			#stamp : 'Anonymous 4/3/2019 03:56',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'agregarPreguntaConTopicos:yTitu:yDesc:',			#protocol : #'as yet unclassified',			#sourceCode : 'agregarPreguntaConTopicos: unTopicos yTitu: unTitu yDesc: unDesc \r\tpreguntas add: (Pregunta conTitulo: unTitu conDescripcion: unDesc topicos: unTopicos).  ',			#stamp : 'Anonymous 4/3/2019 03:57',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T03:58:12.069329-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'agregarPreguntaConTopicos:yTitu:yDesc:',			#protocol : #'as yet unclassified',			#sourceCode : 'agregarPreguntaConTopicos: unTopicos yTitu: unTitu yDesc: unDesc \r\tpreguntas add: (Pregunta conTitulo: unTitu conDescripcion: unDesc topicos: unTopicos).  ',			#stamp : 'Anonymous 4/3/2019 03:57',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'agregarPreguntaConTopicos:yTitu:yDesc:',			#protocol : #'as yet unclassified',			#sourceCode : 'agregarPreguntaConTopicos: unTopicos yTitu: unTitu yDesc: unDesc \r\tpreguntas add: (Pregunta conTitulo: unTitu conDescripcion: unDesc topicos: unTopicos yUsuario: self).  ',			#stamp : 'Anonymous 4/3/2019 03:58',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:10:05.510329-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pregunta class',				#isMetaSide : true			},			#name : #'conTitulo:conDescripcion:topicos:',			#protocol : #'as yet unclassified',			#sourceCode : 'conTitulo: unTitulo conDescripcion: unDescripcion topicos: unTopicos\r\t^self new conTitulo: unTitulo  conDescripcion: unDescripcion  topicos: unTopicos.',			#stamp : 'Anonymous 4/3/2019 04:10',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:11:32.931329-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'agregarPreguntaConTopicos:yTitu:yDesc:',			#protocol : #'as yet unclassified',			#sourceCode : 'agregarPreguntaConTopicos: unTopicos yTitu: unTitu yDesc: unDesc \r\tpreguntas add: (Pregunta conTitulo: unTitu conDescripcion: unDesc topicos: unTopicos yUsuario: self).  ',			#stamp : 'Anonymous 4/3/2019 03:58',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'agregarPreguntaConTopicos:yTitu:yDesc:',			#protocol : #'as yet unclassified',			#sourceCode : 'agregarPreguntaConTopicos: unTopicos yTitu: unTitu yDesc: unDesc \r\t|preg|\r\tpreg:= Pregunta\r\tpreguntas add: (Pregunta conTitulo: unTitu conDescripcion: unDesc topicos: unTopicos).  ',			#stamp : 'Anonymous 4/3/2019 04:11',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:11:43.405329-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pregunta class',				#isMetaSide : true			},			#name : #'conTitulo:conDescripcion:topicos:',			#protocol : #'as yet unclassified',			#sourceCode : 'conTitulo: unTitulo conDescripcion: unDescripcion topicos: unTopicos\r\t^self new conTitulo: unTitulo  conDescripcion: unDescripcion  topicos: unTopicos.',			#stamp : 'Anonymous 4/3/2019 04:10',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:13:56.414329-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'agregarPreguntaConTopicos:yTitu:yDesc:',			#protocol : #'as yet unclassified',			#sourceCode : 'agregarPreguntaConTopicos: unTopicos yTitu: unTitu yDesc: unDesc \r\t|preg|\r\tpreg:= Pregunta\r\tpreguntas add: (Pregunta conTitulo: unTitu conDescripcion: unDesc topicos: unTopicos).  ',			#stamp : 'Anonymous 4/3/2019 04:11',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'agregarPreguntaConTopicos:yTitu:yDesc:',			#protocol : #'as yet unclassified',			#sourceCode : 'agregarPreguntaConTopicos: unTopicos yTitu: unTitu yDesc: unDesc \r\tpreguntas add: (Pregunta conTitulo: unTitu conDescripcion: unDesc topicos: unTopicos conUsuario: self).  ',			#stamp : 'Anonymous 4/3/2019 04:13',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:20:02.382329-03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Sistema,				#isMetaSide : false			},			#name : #'agregarRespuestaA:yTexto:',			#protocol : #initialization,			#sourceCode : 'agregarRespuestaA: unPregunta yTexto: unTexto\r\r\t',			#stamp : 'Anonymous 4/3/2019 04:20',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:23:09.495329-03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Sistema,				#isMetaSide : false			},			#name : #'agregarRespuestaA:yTexto:yUsuario:',			#protocol : #initialization,			#sourceCode : 'agregarRespuestaA: unPregunta yTexto: unTexto yUsuario: unUsuario\r\r\tunUsuario agregarRespuestaA: unPregunta yTexto: unTexto. \r\r\t',			#stamp : 'Anonymous 4/3/2019 04:23',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:23:22.732329-03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Sistema,				#isMetaSide : false			},			#name : #'agregarRespuestaA:yTexto:',			#protocol : #initialization,			#sourceCode : 'agregarRespuestaA: unPregunta yTexto: unTexto\r\r\t',			#stamp : 'Anonymous 4/3/2019 04:20',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:24:46.393329-03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'agregarRespuestaA:yTexto:',			#protocol : #accessing,			#sourceCode : 'agregarRespuestaA: unPregunta yTexto: unTexto\r\r\tunPregunta agregarRespuesta: unTexto.',			#stamp : 'Anonymous 4/3/2019 04:24',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:32:49.117329-03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'agregarRespuesta:',			#protocol : #accessing,			#sourceCode : 'agregarRespuesta: unPreg\r\r\trespuestas add: unPreg.',			#stamp : 'Anonymous 3/26/2019 15:14',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'agregarRespuesta:',			#protocol : #accessing,			#sourceCode : 'agregarRespuesta: unTexto\r\t| resp |\r\tresp:= Respuesta conPreg: self conTexto: unTexto \r\trespuestas add: unTexto.',			#stamp : 'Anonymous 4/3/2019 04:32',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:34:09.213329-03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'agregarRespuestaA:yTexto:',			#protocol : #accessing,			#sourceCode : 'agregarRespuestaA: unPregunta yTexto: unTexto\r\r\tunPregunta agregarRespuesta: unTexto.',			#stamp : 'Anonymous 4/3/2019 04:24',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'agregarRespuestaA:yTexto:',			#protocol : #accessing,			#sourceCode : 'agregarRespuestaA: unPregunta yTexto: unTexto\r\r\tunPregunta agregarRespuesta: unTexto yUsuario: self.',			#stamp : 'Anonymous 4/3/2019 04:34',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:34:54.298329-03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'agregarRespuesta:yUsuario:',			#protocol : #accessing,			#sourceCode : 'agregarRespuesta: unTexto yUsuario: unUsuario\r\t| resp |\r\tresp:= Respuesta conPreg: self conTexto: unTexto conUsuario: unUsuario. \r\trespuestas add: unTexto.',			#stamp : 'Anonymous 4/3/2019 04:34',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:35:01.587329-03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'agregarRespuesta:',			#protocol : #accessing,			#sourceCode : 'agregarRespuesta: unTexto\r\t| resp |\r\tresp:= Respuesta conPreg: self conTexto: unTexto \r\trespuestas add: unTexto.',			#stamp : 'Anonymous 4/3/2019 04:32',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:37:27.017329-03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'agregarRespuesta:yUsuario:',			#protocol : #accessing,			#sourceCode : 'agregarRespuesta: unTexto yUsuario: unUsuario\r\t| resp |\r\tresp:= Respuesta conPreg: self conTexto: unTexto conUsuario: unUsuario. \r\trespuestas add: unTexto.',			#stamp : 'Anonymous 4/3/2019 04:34',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'agregarRespuesta:yUsuario:',			#protocol : #accessing,			#sourceCode : 'agregarRespuesta: unTexto yUsuario: unUsuario\r\r\trespuestas add: (Respuesta conUsuario: unUsuario conPregunta: self conTexto: unTexto).',			#stamp : 'Anonymous 4/3/2019 04:37',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:41:12.156329-03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Respuesta,				#isMetaSide : false			},			#name : #'conUsuario:conPregunta:conText:',			#protocol : #'as yet unclassified',			#sourceCode : 'conUsuario: unUsuario conPregunta: unaPregunta conText: unTexto.\r\tself initialize.\r\tusuario:= unUsuario .\r\tpregunta := unaPregunta .\r\ttexto := unTexto .\r\tfechaCreacion := DateAndTime today.\r\tpregunta agregarRespuesta: self.',			#stamp : 'Anonymous 3/26/2019 15:13',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Respuesta,				#isMetaSide : false			},			#name : #'conUsuario:conPregunta:conText:',			#protocol : #'as yet unclassified',			#sourceCode : 'conUsuario: unUsuario conPregunta: unaPregunta conText: unTexto.\r\tself initialize.\r\tusuario:= unUsuario .\r\tpregunta := unaPregunta .\r\ttexto := unTexto .\r\tfechaCreacion := DateAndTime today.\r\tpregunta agregarRespuesta: self. ',			#stamp : 'Anonymous 4/3/2019 04:41',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:45:50.529329-03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Respuesta,				#isMetaSide : false			},			#name : #'conUsuario:conPregunta:conText:',			#protocol : #'as yet unclassified',			#sourceCode : 'conUsuario: unUsuario conPregunta: unaPregunta conText: unTexto.\r\tself initialize.\r\tusuario:= unUsuario .\r\tpregunta := unaPregunta .\r\ttexto := unTexto .\r\tfechaCreacion := DateAndTime today.\r\tpregunta agregarRespuesta: self. ',			#stamp : 'Anonymous 4/3/2019 04:41',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Respuesta,				#isMetaSide : false			},			#name : #'conUsuario:conPregunta:conText:',			#protocol : #'as yet unclassified',			#sourceCode : 'conUsuario: unUsuario conPregunta: unaPregunta conText: unTexto.\r\tself initialize.\r\tusuario:= unUsuario .\r\tpregunta := unaPregunta .\r\ttexto := unTexto .\r\tfechaCreacion := DateAndTime today.\r\t"pregunta agregarRespuesta: self."              "lo hace en el metodo de pregunta" ',			#stamp : 'Anonymous 4/3/2019 04:45',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:47:49.889329-03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Sistema,				#isMetaSide : false			},			#name : #'agregarA:comoFollowerDe:',			#protocol : #initialization,			#sourceCode : 'agregarA: unUsuario comoFollowerDe: otroUsuario\r\r\tunUsuario follow: otroUsuario.\t',			#stamp : 'Anonymous 4/3/2019 04:47',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:52:35.733329-03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Sistema,				#isMetaSide : false			},			#name : #'resgitrarLikeA:yUsuario:',			#protocol : #initialization,			#sourceCode : 'resgitrarLikeA: unPreg yUsuario: unUsuario\r\r\tunUsuario registrarLike: unPreg.\r\t',			#stamp : 'Anonymous 4/3/2019 04:52',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:53:23.808329-03:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPreg\r\r\tunPreg registrarLike: self.',			#stamp : 'Anonymous 4/3/2019 04:53',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T04:54:36.179329-03:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarDislike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarDislike: unPreg\r\r\tunPreg registrarDislike: self.',			#stamp : 'Anonymous 4/3/2019 04:54',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:03:46.917329-03:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Sistema,				#isMetaSide : false			},			#name : #'resgitrarLikeA:yUsuario:',			#protocol : #initialization,			#sourceCode : 'resgitrarLikeA: unPreg yUsuario: unUsuario\r\r\tunUsuario registrarLike: unPreg.\r\t',			#stamp : 'Anonymous 4/3/2019 04:52',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Sistema,				#isMetaSide : false			},			#name : #'resgitrarLikeA:yUsuario:',			#protocol : #initialization,			#sourceCode : 'resgitrarLikeA: unPregOResp yUsuario: unUsuario\r\r\tunUsuario registrarLike: unPregOResp.\r\t',			#stamp : 'Anonymous 4/3/2019 05:03',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:07:29.280329-03:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPreg\r\r\tunPreg registrarLike: self.',			#stamp : 'Anonymous 4/3/2019 04:53',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPregOResp\r\r\t(unPregOResp likes includes: self)\r\t\tifFalse: [ (unPregOResp dislikes includes: self)\r\t\t\t\tifFalse: [unPregOResp likes add: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]',			#stamp : 'Anonymous 4/3/2019 05:07',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:08:57.941329-03:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #dislikes,			#protocol : #accessing,			#sourceCode : 'dislikes\r\r\t^dislikes ',			#stamp : 'Anonymous 4/3/2019 05:08',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:09:06.865329-03:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #likes,			#protocol : #accessing,			#sourceCode : 'likes\r\r\t^likes ',			#stamp : 'Anonymous 4/3/2019 05:09',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:09:23.223329-03:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Respuesta,				#isMetaSide : false			},			#name : #dislikes,			#protocol : #accessing,			#sourceCode : 'dislikes\r\r\t^dislikes',			#stamp : 'Anonymous 4/3/2019 05:09',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:12:22.004329-03:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarDislike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarDislike: unPreg\r\r\tunPreg registrarDislike: self.',			#stamp : 'Anonymous 4/3/2019 04:54',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarDislike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarDislike: unPregOResp\r\r\t(unPregOResp likes includes: self)\r\t\tifFalse: [ (unPregOResp dislikes includes: self)\r\t\t\t\tifFalse: [unPregOResp likes add: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]',			#stamp : 'Anonymous 4/3/2019 05:12',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:13:29.992329-03:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarDislike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarDislike: unPregOResp\r\r\t(unPregOResp likes includes: self)\r\t\tifFalse: [ (unPregOResp dislikes includes: self)\r\t\t\t\tifFalse: [unPregOResp likes add: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]',			#stamp : 'Anonymous 4/3/2019 05:12',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarDislike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarDislike: unPregOResp\r\r\t(unPregOResp dislikes includes: self)\r\t\tifFalse: [ (unPregOResp likes includes: self)\r\t\t\t\tifFalse: [unPregOResp dislikes add: self ]\r\t\t\t\tifTrue: [unPregOResp dislikes add: self.\r\t\t\t\t\tunPregOResp likes remove: self ] ]',			#stamp : 'Anonymous 4/3/2019 05:13',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:15:46.734329-03:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Sistema,				#isMetaSide : false			},			#name : #'resgitrarLikeA:yUsuario:',			#protocol : #initialization,			#sourceCode : 'resgitrarLikeA: unPregOResp yUsuario: unUsuario\r\r\tunUsuario registrarLike: unPregOResp.\r\t',			#stamp : 'Anonymous 4/3/2019 05:03',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Sistema,				#isMetaSide : false			},			#name : #'resgitrarLikeA:yUsuario:',			#protocol : #initialization,			#sourceCode : 'resgitrarLikeA: unPregOResp yUsuario: unUsuario\r\r\tunUsuario registrarLike: unPregOResp.   "ya que tanto las preguntas y las respuestas registran los likes/dislikes de \t\t\t\t\t\t\t\t\t\t\t\t\t\tla misma \tforma "\r\t',			#stamp : 'Anonymous 4/3/2019 05:15',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:16:30.268329-03:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Sistema,				#isMetaSide : false			},			#name : #'resgitrarLikeA:yUsuario:',			#protocol : #initialization,			#sourceCode : 'resgitrarLikeA: unPregOResp yUsuario: unUsuario\r\r\tunUsuario registrarLike: unPregOResp.   "ya que tanto las preguntas y las respuestas registran los likes/dislikes de \t\t\t\t\t\t\t\t\t\t\t\t\t\tla misma \tforma "\r\t',			#stamp : 'Anonymous 4/3/2019 05:15',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Sistema,				#isMetaSide : false			},			#name : #'resgitrarLikeA:yUsuario:',			#protocol : #initialization,			#sourceCode : 'resgitrarLikeA: unPregOResp yUsuario: unUsuario\r\r\tunUsuario registrarLike: unPregOResp.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\t',			#stamp : 'Anonymous 4/3/2019 05:16',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:16:52.502329-03:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Sistema,				#isMetaSide : false			},			#name : #'resgitrarDislikeA:yUsuario:',			#protocol : #initialization,			#sourceCode : 'resgitrarDislikeA: unPregOResp yUsuario: unUsuario\r\r\tunUsuario registrarDislike: unPregOResp.\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\t',			#stamp : 'Anonymous 4/3/2019 05:16',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:17:38.495329-03:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPregOResp\r\r\t(unPregOResp likes includes: self)\r\t\tifFalse: [ (unPregOResp dislikes includes: self)\r\t\t\t\tifFalse: [unPregOResp likes add: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]',			#stamp : 'Anonymous 4/3/2019 05:07',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPregOResp\r\t"no importa si es una preg o una resp ya que ambas lo hacen de la misma manera"\r\r\t(unPregOResp likes includes: self)\r\t\tifFalse: [ (unPregOResp dislikes includes: self)\r\t\t\t\tifFalse: [unPregOResp likes add: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]',			#stamp : 'Anonymous 4/3/2019 05:17',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:31:26.470329-03:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Like\r\tinstanceVariableNames: \'usuario\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TrabajoPractico1\''			},			#name : #Like,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Like,						#isMetaSide : false					},					#name : #usuario,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Like class\r\tinstanceVariableNames: \'\''				},				#name : #'Like class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Like,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TrabajoPractico1,			#package : #TrabajoPractico1,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:31:30.464329-03:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Like\r\tinstanceVariableNames: \'usuario\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TrabajoPractico1\''			},			#name : #Like,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Like,						#isMetaSide : false					},					#name : #usuario,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Like class\r\tinstanceVariableNames: \'\''				},				#name : #'Like class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Like,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tusuario:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #TrabajoPractico1,			#package : #TrabajoPractico1,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tusuario:\t\t<Object>\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:32:19.433329-03:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Dislike\r\tinstanceVariableNames: \'usuario\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TrabajoPractico1\''			},			#name : #Dislike,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Dislike,						#isMetaSide : false					},					#name : #usuario,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Dislike class\r\tinstanceVariableNames: \'\''				},				#name : #'Dislike class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Dislike,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #TrabajoPractico1,			#package : #TrabajoPractico1,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:32:23.325329-03:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Dislike\r\tinstanceVariableNames: \'usuario\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TrabajoPractico1\''			},			#name : #Dislike,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Dislike,						#isMetaSide : false					},					#name : #usuario,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Dislike class\r\tinstanceVariableNames: \'\''				},				#name : #'Dislike class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Dislike,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tusuario:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #TrabajoPractico1,			#package : #TrabajoPractico1,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tusuario:\t\t<Object>\r\r\r    Implementation Points',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:34:02.213329-03:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Like,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\r\t\r\tusuario:= Usuario new.',			#stamp : 'Anonymous 4/3/2019 05:34',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:34:02.267329-03:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Like,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\r\t\r\tusuario:= Usuario new.',			#stamp : 'Anonymous 4/3/2019 05:34',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Like,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\t\r\tusuario:= Usuario new.',			#stamp : 'Anonymous 4/3/2019 05:34',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:34:31.027329-03:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Dislike,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\r\r\tusuario:= Usuario new.',			#stamp : 'Anonymous 4/3/2019 05:34',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T05:34:31.079329-03:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Dislike,				#isMetaSide : false			},			#name : #initialize,			#protocol : #'as yet unclassified',			#sourceCode : 'initialize\r\r\tusuario:= Usuario new.',			#stamp : 'Anonymous 4/3/2019 05:34',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Dislike,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\r\tusuario:= Usuario new.',			#stamp : 'Anonymous 4/3/2019 05:34',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T06:06:09.515329-03:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPregOResp\r\t"no importa si es una preg o una resp ya que ambas lo hacen de la misma manera"\r\r\t(unPregOResp likes includes: self)\r\t\tifFalse: [ (unPregOResp dislikes includes: self)\r\t\t\t\tifFalse: [unPregOResp likes add: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]',			#stamp : 'Anonymous 4/3/2019 05:17',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPregOResp\r\t"no importa si es una preg o una resp ya que ambas lo hacen de la misma manera"\r\r\t(unPregOResp likes contains: [ :each | each usuario = self ] )\r\t\tifFalse: [ (unPregOResp dislikes contains: [ :each | each usuario = self ])\r\t\t\t\tifFalse: [unPregOResp likes add: Like conUsuario: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: Like conUsuario: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]',			#stamp : 'Anonymous 4/3/2019 06:06',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T06:06:48.409329-03:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Like class',				#isMetaSide : true			},			#name : #'conUsuario:',			#protocol : #'as yet unclassified',			#sourceCode : 'conUsuario: unUsuario\r\r\t^self conUsuario: unUsuario ',			#stamp : 'Anonymous 4/3/2019 06:06',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T06:07:14.789329-03:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Like class',				#isMetaSide : true			},			#name : #'conUsuario:',			#protocol : #'as yet unclassified',			#sourceCode : 'conUsuario: unUsuario\r\r\t^self conUsuario: unUsuario ',			#stamp : 'Anonymous 4/3/2019 06:06',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Like class',				#isMetaSide : true			},			#name : #'conUsuario:',			#protocol : #'as yet unclassified',			#sourceCode : 'conUsuario: unUsuario\r\r\t^self new conUsuario: unUsuario. ',			#stamp : 'Anonymous 4/3/2019 06:07',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T06:07:37.790329-03:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Like\r\tinstanceVariableNames: \'usuario\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TrabajoPractico1\''			},			#name : #Like,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Like,						#isMetaSide : false					},					#name : #usuario,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Like class\r\tinstanceVariableNames: \'\''				},				#name : #'Like class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Like,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tusuario:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #TrabajoPractico1,			#package : #TrabajoPractico1,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Like\r\tinstanceVariableNames: \'usuario fecha\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'TrabajoPractico1\''			},			#name : #Like,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Like,						#isMetaSide : false					},					#name : #usuario,					#parent : @23				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Like,						#isMetaSide : false					},					#name : #fecha,					#parent : @23				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Like class\r\tinstanceVariableNames: \'\''				},				#name : #'Like class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @23			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Like,					#isMetaSide : false				},				#parent : @23,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tusuario:\t\t<Object>\r\r\r    Implementation Points',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #TrabajoPractico1,			#package : #TrabajoPractico1,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T06:08:23.033329-03:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Like,				#isMetaSide : false			},			#name : #'conUsuario:',			#protocol : #initialization,			#sourceCode : 'conUsuario: unUsuario\r\r\tusuario:= unUsuario.\r\tfecha:= DateAndTime now.',			#stamp : 'Anonymous 4/3/2019 06:08',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T06:08:45.680329-03:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Like,				#isMetaSide : false			},			#name : #'conUsuario:',			#protocol : #initialization,			#sourceCode : 'conUsuario: unUsuario\r\r\tusuario:= unUsuario.\r\tfecha:= DateAndTime now.',			#stamp : 'Anonymous 4/3/2019 06:08',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Like,				#isMetaSide : false			},			#name : #'conUsuario:',			#protocol : #initialization,			#sourceCode : 'conUsuario: unUsuario\r\r\tusuario:= unUsuario.\r\tfecha:= DateAndTime today.',			#stamp : 'Anonymous 4/3/2019 06:08',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T06:37:15.237329-03:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPregOResp\r\t"no importa si es una preg o una resp ya que ambas lo hacen de la misma manera"\r\r\t(unPregOResp likes contains: [ :each | each usuario = self ] )\r\t\tifFalse: [ (unPregOResp dislikes contains: [ :each | each usuario = self ])\r\t\t\t\tifFalse: [unPregOResp likes add: Like conUsuario: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: Like conUsuario: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]',			#stamp : 'Anonymous 4/3/2019 06:06',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPregOResp\r\t"no importa si es una preg o una resp ya que ambas lo hacen de la misma manera"\r\r\t| likeAux dlAux |\r\t\r\tunPregOResp likes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\tdlAux dislikes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\t(likeAux isNil)\r\t\tifTrue: [ (dlAux isNil) \r\t\t\tifTrue: [ unPregOResp likes add: (Like conUsuario: self) ]\r\t\t\tifFalse: [ unPregOResp likes add: (Like conUsuario: self).\r\t\t\t\tunPregOResp dislikes remove: dlAux ]\r\t\t]\t \r\r\r\t "End of statement list encountered ->(unPregOResp likes contains: [ :each | each usuario = self ] )\r\t\tifFalse: [ (unPregOResp dislikes contains: [ :each | each usuario = self ])\r\t\t\t\tifFalse: [unPregOResp likes add: Like conUsuario: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: Like conUsuario: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]"',			#stamp : 'Anonymous 4/3/2019 06:37',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T06:37:43.980329-03:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPregOResp\r\t"no importa si es una preg o una resp ya que ambas lo hacen de la misma manera"\r\r\t| likeAux dlAux |\r\t\r\tunPregOResp likes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\tdlAux dislikes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\t(likeAux isNil)\r\t\tifTrue: [ (dlAux isNil) \r\t\t\tifTrue: [ unPregOResp likes add: (Like conUsuario: self) ]\r\t\t\tifFalse: [ unPregOResp likes add: (Like conUsuario: self).\r\t\t\t\tunPregOResp dislikes remove: dlAux ]\r\t\t]\t \r\r\r\t "End of statement list encountered ->(unPregOResp likes contains: [ :each | each usuario = self ] )\r\t\tifFalse: [ (unPregOResp dislikes contains: [ :each | each usuario = self ])\r\t\t\t\tifFalse: [unPregOResp likes add: Like conUsuario: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: Like conUsuario: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]"',			#stamp : 'Anonymous 4/3/2019 06:37',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPregOResp\r\t"no importa si es una preg o una resp ya que ambas lo hacen de la misma manera"\r\r\t| likeAux dlAux |\r\t\r\tunPregOResp likes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\tdlAux dislikes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\t(likeAux isNil)\r\t\tifTrue: [ (dlAux isNil) \r\t\t\tifTrue: [ unPregOResp likes add: (Like conUsuario: self) ]\r\t\t\tifFalse: [ unPregOResp likes add: (Like conUsuario: self).\r\t\t\t\tunPregOResp dislikes remove: dlAux ]\r\t\t\t\t]\t \r\r\r\t "End of statement list encountered ->(unPregOResp likes contains: [ :each | each usuario = self ] )\r\t\tifFalse: [ (unPregOResp dislikes contains: [ :each | each usuario = self ])\r\t\t\t\tifFalse: [unPregOResp likes add: Like conUsuario: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: Like conUsuario: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]"',			#stamp : 'Anonymous 4/3/2019 06:37',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T06:37:48.705329-03:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPregOResp\r\t"no importa si es una preg o una resp ya que ambas lo hacen de la misma manera"\r\r\t| likeAux dlAux |\r\t\r\tunPregOResp likes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\tdlAux dislikes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\t(likeAux isNil)\r\t\tifTrue: [ (dlAux isNil) \r\t\t\tifTrue: [ unPregOResp likes add: (Like conUsuario: self) ]\r\t\t\tifFalse: [ unPregOResp likes add: (Like conUsuario: self).\r\t\t\t\tunPregOResp dislikes remove: dlAux ]\r\t\t\t\t]\t \r\r\r\t "End of statement list encountered ->(unPregOResp likes contains: [ :each | each usuario = self ] )\r\t\tifFalse: [ (unPregOResp dislikes contains: [ :each | each usuario = self ])\r\t\t\t\tifFalse: [unPregOResp likes add: Like conUsuario: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: Like conUsuario: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]"',			#stamp : 'Anonymous 4/3/2019 06:37',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPregOResp\r\t"no importa si es una preg o una resp ya que ambas lo hacen de la misma manera"\r\r\t| likeAux dlAux |\r\t\r\tunPregOResp likes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\tdlAux dislikes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\t(likeAux isNil)\r\t\tifTrue: [ (dlAux isNil) \r\t\t\tifTrue: [ unPregOResp likes add: (Like conUsuario: self) ]\r\t\t\tifFalse: [ unPregOResp likes add: (Like conUsuario: self).\r\t\t\t\tunPregOResp dislikes remove: dlAux ]\r\t\t\t\t\t]\t \r\r\r\t "End of statement list encountered ->(unPregOResp likes contains: [ :each | each usuario = self ] )\r\t\tifFalse: [ (unPregOResp dislikes contains: [ :each | each usuario = self ])\r\t\t\t\tifFalse: [unPregOResp likes add: Like conUsuario: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: Like conUsuario: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]"',			#stamp : 'Anonymous 4/3/2019 06:37',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T06:38:52.366329-03:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPregOResp\r\t"no importa si es una preg o una resp ya que ambas lo hacen de la misma manera"\r\r\t| likeAux dlAux |\r\t\r\tunPregOResp likes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\tdlAux dislikes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\t(likeAux isNil)\r\t\tifTrue: [ (dlAux isNil) \r\t\t\tifTrue: [ unPregOResp likes add: (Like conUsuario: self) ]\r\t\t\tifFalse: [ unPregOResp likes add: (Like conUsuario: self).\r\t\t\t\tunPregOResp dislikes remove: dlAux ]\r\t\t\t\t\t]\t \r\r\r\t "End of statement list encountered ->(unPregOResp likes contains: [ :each | each usuario = self ] )\r\t\tifFalse: [ (unPregOResp dislikes contains: [ :each | each usuario = self ])\r\t\t\t\tifFalse: [unPregOResp likes add: Like conUsuario: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: Like conUsuario: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]"',			#stamp : 'Anonymous 4/3/2019 06:37',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPregOResp\r\t"no importa si es una preg o una resp ya que ambas lo hacen de la misma manera"\r\r\t| likeAux dlAux |\r\t\r\tunPregOResp likes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\tdlAux dislikes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\t(likeAux isNil)\r\t\tifTrue: [ (dlAux isNil) \r\t\t\tifTrue: [ unPregOResp likes add: (Like conUsuario: self) ]\r\t\t\tifFalse: [ unPregOResp likes add: (Like conUsuario: self).\r\t\t\t\tunPregOResp dislikes remove: dlAux ]\t]\t \r\r\r\t "End of statement list encountered ->(unPregOResp likes contains: [ :each | each usuario = self ] )\r\t\tifFalse: [ (unPregOResp dislikes contains: [ :each | each usuario = self ])\r\t\t\t\tifFalse: [unPregOResp likes add: Like conUsuario: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: Like conUsuario: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]"',			#stamp : 'Anonymous 4/3/2019 06:38',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T06:39:43.862329-03:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPregOResp\r\t"no importa si es una preg o una resp ya que ambas lo hacen de la misma manera"\r\r\t| likeAux dlAux |\r\t\r\tunPregOResp likes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\tdlAux dislikes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\t(likeAux isNil)\r\t\tifTrue: [ (dlAux isNil) \r\t\t\tifTrue: [ unPregOResp likes add: (Like conUsuario: self) ]\r\t\t\tifFalse: [ unPregOResp likes add: (Like conUsuario: self).\r\t\t\t\tunPregOResp dislikes remove: dlAux ]\t]\t \r\r\r\t "End of statement list encountered ->(unPregOResp likes contains: [ :each | each usuario = self ] )\r\t\tifFalse: [ (unPregOResp dislikes contains: [ :each | each usuario = self ])\r\t\t\t\tifFalse: [unPregOResp likes add: Like conUsuario: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: Like conUsuario: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]"',			#stamp : 'Anonymous 4/3/2019 06:38',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPregOResp\r\t"no importa si es una preg o una resp ya que ambas lo hacen de la misma manera"\r\r\t| likeAux dlAux |\r\t\r\tlikeAux := unPregOResp likes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\tdlAux:= unPregOResp  dislikes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\t(likeAux isNil)\r\t\tifTrue: [ (dlAux isNil) \r\t\t\tifTrue: [ unPregOResp likes add: (Like conUsuario: self) ]\r\t\t\tifFalse: [ unPregOResp likes add: (Like conUsuario: self).\r\t\t\t\tunPregOResp dislikes remove: dlAux ]\t]\t \r\r\r\t "End of statement list encountered ->(unPregOResp likes contains: [ :each | each usuario = self ] )\r\t\tifFalse: [ (unPregOResp dislikes contains: [ :each | each usuario = self ])\r\t\t\t\tifFalse: [unPregOResp likes add: Like conUsuario: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: Like conUsuario: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]"',			#stamp : 'Anonymous 4/3/2019 06:39',			#package : #TrabajoPractico1		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2019-04-03T06:40:23.135329-03:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPregOResp\r\t"no importa si es una preg o una resp ya que ambas lo hacen de la misma manera"\r\r\t| likeAux dlAux |\r\t\r\tlikeAux := unPregOResp likes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\tdlAux:= unPregOResp  dislikes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\t(likeAux isNil)\r\t\tifTrue: [ (dlAux isNil) \r\t\t\tifTrue: [ unPregOResp likes add: (Like conUsuario: self) ]\r\t\t\tifFalse: [ unPregOResp likes add: (Like conUsuario: self).\r\t\t\t\tunPregOResp dislikes remove: dlAux ]\t]\t \r\r\r\t "End of statement list encountered ->(unPregOResp likes contains: [ :each | each usuario = self ] )\r\t\tifFalse: [ (unPregOResp dislikes contains: [ :each | each usuario = self ])\r\t\t\t\tifFalse: [unPregOResp likes add: Like conUsuario: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: Like conUsuario: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]"',			#stamp : 'Anonymous 4/3/2019 06:39',			#package : #TrabajoPractico1		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Usuario,				#isMetaSide : false			},			#name : #'registrarLike:',			#protocol : #'as yet unclassified',			#sourceCode : 'registrarLike: unPregOResp\r\t"no importa si es una preg o una resp ya que ambas lo hacen de la misma manera"\r\t| likeAux dlAux |\r\t\r\tlikeAux := unPregOResp likes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\tdlAux:= unPregOResp  dislikes detect: [ :each | each usuario = self ] ifNone: [ ^nil ].\r\t(likeAux isNil)\r\t\tifTrue: [ (dlAux isNil) \r\t\t\tifTrue: [ unPregOResp likes add: (Like conUsuario: self) ]\r\t\t\tifFalse: [ unPregOResp likes add: (Like conUsuario: self).\r\t\t\t\tunPregOResp dislikes remove: dlAux ]\t]\t \r\r\r\t "End of statement list encountered ->(unPregOResp likes contains: [ :each | each usuario = self ] )\r\t\tifFalse: [ (unPregOResp dislikes contains: [ :each | each usuario = self ])\r\t\t\t\tifFalse: [unPregOResp likes add: Like conUsuario: self ]\r\t\t\t\tifTrue: [ unPregOResp likes add: Like conUsuario: self.\r\t\t\t\t\tunPregOResp dislikes remove: self ] ]"',			#stamp : 'Anonymous 4/3/2019 06:40',			#package : #TrabajoPractico1		}	}}